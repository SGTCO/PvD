name: Build APK from Web

on:
  release:
    types: [published]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 取得你的 repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ 安裝 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ 初始化 npm 專案 + 安裝 Capacitor
      - name: Setup npm and Capacitor
        run: |
          npm init -y
          npm install @capacitor/core @capacitor/cli @capacitor/android --save-dev

      # 4️⃣ 安裝 Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 5️⃣ 安裝 Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6️⃣ 複製網站檔案（排除 app/.github/.git）
      - name: Copy website files
        shell: bash
        run: |
          mkdir -p app/public
          shopt -s extglob
          cp -r !(app|.github|.git|node_modules) app/public/
          echo "✅ Website files copied to app/public"

      # 7️⃣ 初始化 Capacitor 專案與 Android 平台
      - name: Initialize Capacitor and Android
        run: |
          npx cap init "PvDWebApp" "com.sgtco.pvd" --web-dir app/public
          npx cap add android

      # 8️⃣ 全面強制 Java 17 並補齊必要的 Android SDK 設定
      - name: Force Gradle modules to use Java 17
        run: |
          export JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64
          export PATH="$JAVA_HOME/bin:$PATH"

          # 設定 gradle.properties
          echo "org.gradle.java.home=$JAVA_HOME" >> android/gradle.properties
          echo "org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8" >> android/gradle.properties

          # 修正 Java/Kotlin DSL 版本
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | xargs -0 sed -i \
            -e 's/JavaVersion.VERSION_21/JavaVersion.VERSION_17/g' \
            -e 's/sourceCompatibility = JavaVersion.VERSION_21/sourceCompatibility = JavaVersion.VERSION_17/g' \
            -e 's/targetCompatibility = JavaVersion.VERSION_21/targetCompatibility = JavaVersion.VERSION_17/g' \
            -e 's/sourceCompatibility = 21/sourceCompatibility = 17/g' \
            -e 's/targetCompatibility = 21/targetCompatibility = 17/g' \
            -e 's/jvmTarget = "21"/jvmTarget = "17"/g'

          # 🔧 對 Kotlin DSL (java { ... }) 結構強制改寫
          find android -type f -name "*.gradle.kts" -print0 | xargs -0 sed -i \
            -e 's/java {/java {\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17/g'

          # 🔧 補上 compileSdkVersion 與 compileOptions
          sed -i '/android {/a\
              compileSdkVersion 34\
              defaultConfig {\
                  targetSdkVersion 34\
                  minSdkVersion 22\
              }\
              compileOptions {\
                  sourceCompatibility JavaVersion.VERSION_17\
                  targetCompatibility JavaVersion.VERSION_17\
              }' android/app/build.gradle || true

          echo "✅ All Gradle and Kotlin DSL modules patched to Java 17"

      - name: Verify Java version
        run: |
          java -version
          javac -version
          echo "JAVA_HOME=$JAVA_HOME"

      # 9️⃣ 打包 APK
      - name: Build Android APK
        run: |
          export JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64
          export PATH="$JAVA_HOME/bin:$PATH"
          cd android
          ./gradlew assembleDebug
          echo "✅ APK build finished"

      # 🔟 上傳問題報告（若失敗可下載查看）
      - name: Upload Gradle problem report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-problems-report
          path: android/build/reports/problems

      # ⓫ 上傳 APK 到 Release
      - name: Upload APK to release
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build Static WebView APK

on:
  release:
    types: [published]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Create Android project for static site
        run: |
          set -eu
          mkdir -p android/app/src/main/{java/com/sgtco/pvd,assets,res/layout}
          cd android

          cat > build.gradle <<'EOF'
          plugins {
              id 'com.android.application' version '8.5.0'
          }

          android {
              compileSdk 34
              defaultConfig {
                  applicationId "com.sgtco.pvd"
                  minSdk 23
                  targetSdk 34
                  versionCode 1
                  versionName "1.0"
              }
              buildTypes {
                  release {
                      minifyEnabled false
                      shrinkResources false
                  }
              }
          }

          dependencies {}
          EOF

          cat > settings.gradle <<'EOF'
          rootProject.name = "PvDWebApp"

          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }
          EOF

          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.sgtco.pvd">

              <application
                  android:label="PvDWebApp"
                  android:usesCleartextTraffic="true"
                  android:allowBackup="false">
                  <activity android:name=".MainActivity"
                      android:exported="true"
                      android:configChanges="orientation|keyboardHidden|screenSize"
                      android:screenOrientation="portrait">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF

          cat > app/src/main/res/layout/activity_main.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <WebView xmlns:android="http://schemas.android.com/apk/res/android"
              android:id="@+id/webview"
              android:layout_width="match_parent"
              android:layout_height="match_parent" />
          EOF

          cat > app/src/main/java/com/sgtco/pvd/MainActivity.java <<'EOF'
          package com.sgtco.pvd;

          import android.annotation.SuppressLint;
          import android.os.Bundle;
          import android.webkit.WebSettings;
          import android.webkit.WebView;
          import android.webkit.WebViewClient;
          import androidx.appcompat.app.AppCompatActivity;
          import android.view.MotionEvent;

          public class MainActivity extends AppCompatActivity {
              private WebView webView;

              @SuppressLint("SetJavaScriptEnabled")
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  setContentView(R.layout.activity_main);

                  webView = findViewById(R.id.webview);
                  WebSettings webSettings = webView.getSettings();
                  webSettings.setJavaScriptEnabled(true);
                  webSettings.setDomStorageEnabled(true);
                  webView.setWebViewClient(new WebViewClient());

                  // 禁止下拉刷新
                  webView.setOnTouchListener((v, event) -> event.getAction() == MotionEvent.ACTION_MOVE);

                  // 載入本地靜態網站
                  webView.loadUrl("file:///android_asset/index.html");
              }
          }
          EOF

          cat > gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx2g
          android.useAndroidX=true
          android.enableJetifier=true
          EOF

          # 將根目錄的靜態網站打包進 assets
          cp -r ../* app/src/main/assets/ || echo "⚠️ no static files found"

      - name: Build APK
        working-directory: android
        run: |
          gradle wrapper
          ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PvDWebApp-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk

      - name: Attach APK to Release
        uses: softprops/action-gh-release@v2
        with:
          files: android/app/build/outputs/apk/debug/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build APK from Web

on:
  release:
    types: [published]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      # 取得你的 repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安裝 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 安裝 Java 17 (Temurin)
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 安裝 Capacitor CLI
      - name: Install Capacitor CLI
        run: |
          npm install -g @capacitor/cli @capacitor/android

      # 建立 android 專案資料夾
      - name: Generate Android project (Capacitor)
        run: |
          npx cap init "PvDWebApp" "com.sgtco.pvd" --web-dir app/public
          npx cap add android

      # 🚫 移除 @capacitor/android 內建的 Java 21 toolchain
      - name: Force downgrade Capacitor Android toolchain to Java 17
        run: |
          echo "🔧 Removing toolchain JDK 21 requirement from @capacitor/android ..."
          find node_modules/@capacitor/android -type f -name "build.gradle*" -print0 | xargs -0 sed -i \
            -e '/toolchain {/,/}/d' \
            -e '/languageVersion\.set(JavaLanguageVersion\.of(21))/d' \
            -e 's/JavaLanguageVersion\.of(21)/JavaLanguageVersion.of(17)/g' \
            -e 's/JavaVersion.VERSION_21/JavaVersion.VERSION_17/g' \
            -e 's/jvmTarget = "21"/jvmTarget = "17"/g'
          echo "✅ Capacitor Android toolchain patched to Java 17"

      # 🔧 強制 Android Gradle 使用 Java 17 編譯
      - name: Patch Android Gradle files to use Java 17 & diagnostics
        run: |
          set -eu
          echo "🔧 Patching Android Gradle config for Java 17..."
          find android -type f -name "build.gradle*" -print0 | while IFS= read -r -d '' file; do
            echo "Patching $file"
            sed -i '/sourceCompatibility/d' "$file" || true
            sed -i '/targetCompatibility/d' "$file" || true
            sed -i '/jvmTarget/d' "$file" || true
            cat <<'EOF' >> "$file"

            android {
                compileOptions {
                    sourceCompatibility = JavaVersion.VERSION_17
                    targetCompatibility = JavaVersion.VERSION_17
                }
            }

            kotlinOptions {
                jvmTarget = "17"
            }
          EOF
          done

          echo "✅ Android Gradle files patched to Java 17"

      # 確認 Java 版本
      - name: Verify Java version
        run: |
          java -version
          javac -version
          echo "JAVA_HOME=$JAVA_HOME"

      # 🧩 建立 Gradle Wrapper（若不存在）
      - name: Ensure Gradle Wrapper
        run: |
          cd android
          if [ ! -f gradlew ]; then
            echo "gradlew not found — installing Gradle wrapper..."
            gradle wrapper
          fi
          chmod +x gradlew

      # 🚀 編譯 APK
      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace

      # 📦 上傳成品到 GitHub Artifacts
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PvD-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk